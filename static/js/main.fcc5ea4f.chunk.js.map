{"version":3,"sources":["components/functional/ChoiceButton.js","components/functional/Choice.js","components/functional/Input.js","components/functional/InputForm.js","components/functional/Loading.js","components/functional/Error.js","components/pages/Start.js","components/functional/Wait.js","components/functional/PlayAgain.js","components/pages/Tile.js","components/pages/Board.js","components/pages/SuperBoard.js","Game.js","index.js","components/pages/logo2.png"],"names":["ChoiceButton","type","choice","label","onChoice","className","onClick","bind","Choice","logo","href","src","alt","Input","props","name","placeholder","value","onChange","autoComplete","id","InputForm","stepBack","onSubmit","onTyping","newGame","room","Loading","loading","style","display","userSelect","Error","message","opacity","Start","newState","setState","stepForward","validate","state","console","log","socket","emit","setTimeout","displayError","step","e","target","error","errorMessage","serverConfirmed","this","socketIOClient","on","disconnect","to","React","Component","Wait","textArea","useRef","ref","readOnly","current","select","document","execCommand","PlayAgain","end","visibility","Tile","prevCoordinate","gameResult","boardResult","isEnabled","index","boardIndex","handleOnClick","classes","isPrevClick","bgdColor","border","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","backgroundColor","fontSize","height","useStyles","prevBoard","prevIndex","Grid","item","xs","Paper","event","palette","text","secondary","Board","board","tiles","counter","i","push","key","container","SuperBoard","handleClick","game","piece","turn","playAgainRequest","statusMessage","currentPlayerScore","opponentPlayer","waiting","joinError","socketID","io","qs","parse","window","location","search","ignoreQueryPrefix","gameState","players","gameStart","handleUpdate","handleWin","handleDraw","handleRestart","opponent","filter","setBoard","setTurn","setMessage","playerScore","opponentScore","enabledBoards","includes","boardArray","newBoard","renderBoard","direction","Game","path","exact","component","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fcc5ea4f.chunk.js","sourcesContent":["import React from 'react';\n\nconst ChoiceButton = ({type, choice, label, onChoice}) => {\n    return (\n        <div className={`btn btn-${type}`} onClick={onChoice.bind(this, choice)}>{label}</div>\n    );\n}\n\nexport default ChoiceButton;\n","import React from 'react';\nimport ChoiceButton from './ChoiceButton'\nimport Paper from '@material-ui/core/Paper';\n\nconst Choice = ({logo, onChoice}) => {\n    return (\n        <>\n        <div className='choice-container'>\n            <a href=\"/\"><img src={logo} alt='React TicTacToe'/></a>\n            <ChoiceButton onChoice={onChoice} type='primary' choice='new' label='Start New'/> \n            <ChoiceButton onChoice={onChoice} type='secondary' choice='join' label='Join Game'/> \n        </div>\n        </>\n    );\n}\n\nexport default Choice;\n","import React from 'react';\n\nconst Input = (props) => {\n    const {name, placeholder, value, onChange} = props\n    return (\n        <input autoComplete='off' type=\"text\" name={name} id={name} placeholder={placeholder} value={value} onChange={onChange}/>\n    );\n}\n\nexport default Input;\n","import React from 'react';\nimport Input from './Input.js'\nimport ChoiceButton from './ChoiceButton'\n\nconst InputForm = (props) => {\n    const {stepBack, onSubmit, onTyping, newGame, name, room} = props\n    \n\n    if (newGame){\n        return (\n            <div className=\"input-container\">\n                <Input \n                name='name'\n                placeholder='Your Name...'\n                onChange = {onTyping}\n                value = {name}\n                />\n                <div className='nav-container'>\n                    <ChoiceButton type='nav-back' choice='back' onChoice={stepBack} label='Back'/>\n                    <ChoiceButton type='nav-forward' choice='submit' onChoice={onSubmit} label=\"Let's Go\"/>\n                </div>\n            </div>\n        );\n    }else{\n        return (\n            <div className=\"input-container\">\n                <Input \n                name='name'\n                placeholder='Your Name...'\n                onChange = {onTyping}\n                value = {name}\n                />\n                <Input \n                name='room'\n                placeholder='Room ID...'\n                onChange = {onTyping}\n                value = {room}\n                />\n                <div className='nav-container'>\n                    <ChoiceButton type='nav-back' choice='back' onChoice={stepBack} label='Back'/>\n                    <ChoiceButton type='nav-forward' choice='submit' onChoice={onSubmit} label=\"Let's Go\"/>\n                    \n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default InputForm;\n","import React from 'react';\n\nconst Loading = ({loading}) => {\n    return (\n        <div className=\"loader\" style={{display:loading?'flex':'none'}}>\n            <i className=\"fa fa-spinner fa-pulse fa-4x fa-fw\"></i>\n            <span style={{userSelect: 'none'}}>Loading...</span>\n        </div>\n    );\n}\n\nexport default Loading;\n","import React from 'react';\n\nconst Error = ({display, message}) => {\n    return (\n        <div className=\"error\" style={{opacity:display?'100%':'0'}}>\n            <h1 className=\"error-message\">\n                {message}\n            </h1>\n        </div>\n    );\n}\n\n\n\nexport default Error;\n","import React from 'react';\n\nimport Choice from '../functional/Choice.js'\nimport InputForm from '../functional/InputForm.js'\nimport Loading from '../functional/Loading'\nimport Error from '../functional/Error'\nimport logo from './logo2.png'\n\nimport {Redirect} from 'react-router-dom'\n\nimport socketIOClient from 'socket.io-client'\n// const ENDPOINT = 'https://react-ttt-app.herokuapp.com/'\n// const ENDPOINT = 'http://localhost:4000'\nconst ENDPOINT = 'https://sleepy-taiga-16574.herokuapp.com/'\n\nclass Start extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            step: 1,\n            name: '',\n            newGame: null,\n            room: '',\n            loading: false,\n            serverConfirmed: false,\n            error: false,\n            errorMessage: '',\n        }\n    }\n    \n    componentDidMount(){\n        this.socket = socketIOClient(ENDPOINT)\n        this.socket.on('newGameCreated', (room) =>{\n            this.setState({serverConfirmed:true, room:room})\n        })\n        this.socket.on('joinConfirmed', ()=>{\n            this.setState({serverConfirmed:true})\n        })\n        this.socket.on('errorMessage', (message) => this.displayError(message))\n    }\n\n\n    componentWillUnmount(){\n        console.log(\"Unmounting, so disconnecting....\")\n        this.socket.disconnect()\n    }\n\n    onChoice = (choice)=>{\n        const gameChoice = choice==='new'?true:false\n        const newState = {newGame: gameChoice}\n        this.setState(newState, ()=>{\n            this.stepForward()\n        })\n    }\n\n    validate = ()=>{\n        if (this.state.newGame){\n            return !(this.state.name==='')\n        }else{\n            return !(this.state.name==='') && !(this.state.room==='')\n        }\n    }\n\n    onSubmit = ()=>{\n        console.log(\"Inside OnSubmit...\")\n        this.setState({loading: true})\n        if (this.validate()){\n            console.log(\"Validated....\")\n            if (this.state.newGame){\n                console.log(\"emitting newGame....\", this.socket)\n                this.socket.emit('newGame')\n            }else{\n                this.socket.emit('joining', {room:this.state.room})\n            }\n        }else{\n            setTimeout(()=>this.setState({loading: false }), 500)\n            this.displayError(this.state.newGame? 'Please fill out your name':'Please fill out your name and room id')\n        }\n    }\n\n    stepBack = ()=>{\n        this.setState({step: this.state.step - 1})\n    }\n\n    stepForward = () =>{\n        this.setState({step: this.state.step + 1})\n    }\n\n    onTyping = (e)=>{\n        const target = e.target.name\n        const newState = {[target]:e.target.value}\n        this.setState(newState)\n    }\n\n    displayError = (message) =>{\n        this.setState({error:true, errorMessage:message, loading:false})\n        setTimeout(()=>{\n            this.setState({error:false, errorMessage:''})\n        }, 3000)\n    }\n\n    render(){\n        if (this.state.serverConfirmed){\n            return(\n                <Redirect to={`/game?room=${this.state.room}&name=${this.state.name}`} />\n            )\n        }else{\n            switch(this.state.step){\n                case(1):\n                    return (\n                        <Choice logo={logo} onChoice={this.onChoice}/>\n                    );\n                case(2):\n                    return (\n                        <>\n                            <Loading loading={this.state.loading}/>\n                            <Error display={this.state.error} message={this.state.errorMessage}/>\n                            <InputForm \n                                stepBack={this.stepBack} \n                                onSubmit={this.onSubmit} \n                                onTyping={this.onTyping.bind(this)}\n                                newGame={this.state.newGame}\n                                name = {this.state.name}\n                                room = {this.state.room}/> \n                        </>\n                    );\n                default:\n                    return null\n            }\n        }\n        \n    }\n    \n}\n\nexport default Start;\n\n","import React, {useRef} from 'react';\n\nconst Wait = ({room, display}) => {\n    const textArea = useRef(null)\n    const onClick = () =>{\n        textArea.current.select()\n        document.execCommand('copy')\n    }\n\n    return (\n        <div className='wait' style={{display:display?'flex':'none'}}>\n            <h1 className=\"wait-message\">Waiting for player to connect...</h1>\n            <div className=\"copy\">\n                <h1 className='copy-message'>Give your friend the following room id to connect</h1>\n                <div className='copy-container'>\n                    <input ref={textArea} readOnly={true} value={room} className='copy-area'/>\n                    <button className='copy-button' onClick={onClick}>Copy</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Wait;\n","import React from 'react'\n\nexport default function PlayAgain({end, onClick}) {\n    return (\n        <div className='again-container'>\n            <button className='again-button' onClick={onClick} style={{visibility: end?'visible':'hidden', opacity: end?'1':'0'}}>Play Again</button>\n        </div>\n    )\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\n// import black from \"@material-ui/core/colors/black\";\n\n\nfunction useStyles(isEnabled, boardResult, isPrevClick) {\n    var bgdColor = 'white';\n    if (boardResult == 'X'){\n        bgdColor = 'lightblue';\n    } \n    else if (boardResult == 'O'){\n        bgdColor = 'darkseagreen';\n    } else if (boardResult == 'D'){\n        bgdColor = 'sandybrown';\n    }\n    else if (isEnabled){\n        bgdColor = 'gray'\n    }\n\n    var border = `1px solid black`\n    if (isPrevClick) {\n        border = `1.5px solid red`\n    }\n\n    const classes = makeStyles((theme) => ({\n        root: {\n        flexGrow: 1,\n        },\n        paper: {\n        padding: theme.spacing(3),\n        textAlign: 'center',\n        //   color: theme.palette.text.secondary,\n        color: 'black',\n        backgroundColor: bgdColor,\n        border: border,\n        fontSize: '1rem',\n        height: '1rem',\n        },\n    }));\n    return classes();\n}\n\nconst Tile = (props) => {\n\n    const isPrevClick = (prevCoordinate, boardIndex, index) => {\n        if (!prevCoordinate){\n            return false\n        }\n        if (\n            (prevCoordinate.prevBoard == boardIndex) &&\n            (prevCoordinate.prevIndex == index)\n        ) {\n            return true\n        } else {\n            return false\n        }\n    }\n    \n    // extracting necessary fields from the props\n    const {prevCoordinate, gameResult, boardResult, value, isEnabled, index, boardIndex, handleOnClick} = props\n    const classes = useStyles(isEnabled, boardResult, isPrevClick(prevCoordinate, boardIndex, index));\n\n    const childToParentOnClick = (event) => {\n        console.log(\"here!\")\n        if (isEnabled && (boardResult == 'U') && (value == null) && (gameResult == 'U')) {\n            handleOnClick(boardIndex, index)\n        }\n    }\n\n    return (\n        <Grid item xs={4}>\n          <Paper className={classes.paper} onClick={childToParentOnClick}>{value}</Paper>\n        </Grid>\n    )\n}\n\nexport default Tile;","import React, {useState, useEffect}  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Tile from './Tile';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  }\n}));\n\nconst Board = (props) => {\n  const classes = useStyles();\n\n  // extracting necessary fields from the props\n  const {prevCoordinate, gameResult, isEnabled, boardIndex, board, handleOnClick} = props\n  var tiles = [];\n  var counter = 0;\n  const boardResult = board.boardResult\n  for (let i = 0; i < 9; i++){\n    const value = board.board[i]\n    tiles.push(\n      <Tile prevCoordinate={prevCoordinate} gameResult={gameResult} boardResult={boardResult} value={value} isEnabled={isEnabled} index={i} boardIndex={boardIndex} key={counter} handleOnClick={handleOnClick}/>\n    );\n    counter += 1;\n  }\n\n  return (\n      <Grid item xs={4} container>\n        {tiles}\n      </Grid>\n  );\n}\n\nexport default Board","import React, { Component } from 'react';\nimport {Redirect} from 'react-router-dom'\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Square from '../functional/Square';\nimport Wait from '../functional/Wait'\nimport Status from '../functional/Status'\nimport ScoreBoard from '../functional/ScoreBoard'\nimport PlayAgain from '../functional/PlayAgain'\nimport Board from './Board'\n\nimport io from 'socket.io-client'\nimport qs from 'qs'\n// const ENDPOINT = 'https://react-ttt-app.herokuapp.com/'\n// const ENDPOINT = 'http://localhost:4000'\nconst ENDPOINT = 'https://sleepy-taiga-16574.herokuapp.com/'\n\nclass SuperBoard extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      game: null,\n      piece: 'X',\n      turn: true,\n      end: false,\n      room: '',\n      statusMessage: '',\n      currentPlayerScore: 0,\n      opponentPlayer: [],\n      //State to check when a new user join\n      waiting: false,\n      joinError: false\n    }\n    this.socketID = null\n  }\n\n  componentDidMount() {\n    //Getting the room and the username information from the url\n    //Then emit to back end to process\n    this.socket = io(ENDPOINT)\n    const {room, name} = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n     })\n    console.log(\"About to set room: \", room, name)\n    this.setState({room})\n    this.socket.emit('newRoomJoin', {room, name})\n\n    //New user join, logic decide on backend whether to display \n    //the actual game or the wait screen or redirect back to the main page\n    this.socket.on('waiting', ()=> this.setState({waiting:true, currentPlayerScore:0, opponentPlayer:[]}))\n    this.socket.on('starting', ({gameState, players, turn})=> {\n      this.setState({waiting:false})\n      this.gameStart(gameState, players)\n    })\n    this.socket.on('joinError', () => this.setState({joinError: true}))\n\n    //Listening to the assignment of piece store the piece along with the in state\n    //socket id in local socketID variable\n    this.socket.on('pieceAssignment', ({piece, id}) => {\n      this.setState({piece: piece})\n      this.socketID = id \n    })\n\n    //Game play logic events\n    this.socket.on('update', ({gameState}) => this.handleUpdate(gameState))\n    this.socket.on('winner', ({gameState,id}) => this.handleWin(id, gameState))\n    this.socket.on('draw', ({gameState}) => this.handleDraw(gameState))\n\n    this.socket.on('restart', ({gameState}) => this.handleRestart(gameState))\n  }\n\n  //Setting the states to start a game when new user join\n  gameStart(gameState, players){\n    const opponent = players.filter(([id, name]) => id!==this.socketID)[0][1]\n    this.setState({opponentPlayer: [opponent, 0], end:false})\n    this.setBoard(gameState)\n    this.setTurn(gameState.turn)\n    this.setMessage()\n  }\n\n  //When some one make a move, emit the event to the back end for handling\n  handleClick = (boardIndex, index) => {\n    const {game, piece, end, turn, room} = this.state\n    if (!game[index] && !end && turn){\n      this.socket.emit('move', {room, piece, boardIndex, index})\n    }\n  }\n\n  //Setting the states each move when the game haven't ended (no wins or draw)\n  handleUpdate(gameState){\n    this.setBoard(gameState)\n    this.setTurn(gameState.turn)\n    this.setMessage()\n  }\n\n  //Setting the states when some one wins\n  handleWin(id, gameState) {\n    this.setBoard(gameState)\n    if (this.socketID === id){\n      const playerScore = this.state.currentPlayerScore + 1\n      this.setState({currentPlayerScore:playerScore, statusMessage:'You Win'})\n    }else{\n      const opponentScore = this.state.opponentPlayer[1] + 1\n      const opponent = this.state.opponentPlayer\n      opponent[1] = opponentScore\n      this.setState({opponentPlayer:opponent, statusMessage:`${this.state.opponentPlayer[0]} Wins`})\n    }\n    this.setState({end:true})\n  }\n\n  //Setting the states when there is a draw at the end\n  handleDraw(gameState){\n    this.setBoard(gameState)\n    this.setState({end:true, statusMessage:'Draw'})\n  }\n\n  playAgainRequest = () => {\n    this.socket.emit('playAgainRequest', this.state.room)\n  }\n\n  //Handle the restart event from the back end\n  handleRestart(gameState){\n    const turn = gameState.turn\n    this.setBoard(gameState)\n    this.setTurn(turn)\n    this.setMessage()\n    this.setState({end: false})\n  }\n\n  //Some utilities methods to set the states of the board\n\n  setMessage(){\n    const message = this.state.turn?'Your Turn':`${this.state.opponentPlayer[0]}'s Turn`\n    this.setState({statusMessage:message})\n  }\n\n  setTurn(turn){\n    if (this.state.piece === turn){\n      this.setState({turn:true})\n    }else{\n      this.setState({turn:false})\n    }\n  } \n\n  setBoard(gameState){\n    this.setState({game:gameState})\n  }\n  \n  // renderSquare(i){\n  //   return(\n  //     <Square key={i} value={this.state.game[i]} \n  //                             player={this.state.piece} \n  //                             end={this.state.end} \n  //                             id={i} \n  //                             onClick={this.handleClick}\n  //                             turn={this.state.turn}/> \n  //   )\n  // }\n\n  renderBoard(i){\n    const isEnabled = this.state.game.enabledBoards.includes(i)\n    return(\n      <Board key={i} \n                 prevCoordinate={this.state.game.prevCoordinate} \n                 gameResult={this.state.game.gameResult}\n                 isEnabled={isEnabled}\n                 boardIndex={i}\n                 board={this.state.game.game[i]}\n                 handleOnClick={this.handleClick} />\n    )\n  }\n\n  render(){\n    // const useStyles = makeStyles((theme) => ({\n    //   root: {\n    //     // flexGrow: 1,\n    //   },\n    //   paper: {\n    //     padding: theme.spacing(2),\n    //     textAlign: 'center',\n    //     border: `1px solid black`,\n    //     fontSize: '3rem',\n    //     height: '3rem',\n    //     // color: theme.palette.text.secondary,\n    //   },\n    // }));\n    // const classes = useStyles();\n\n    if (this.state.joinError){\n      return(\n        <Redirect to={`/`} />\n      )\n    }else{\n      const boardArray = []\n      if (this.state.game){\n        for (let i=0; i<9; i++){\n          const newBoard = this.renderBoard(i)\n          boardArray.push(newBoard)\n        }\n      }\n      return(\n        // <>\n        //   <Wait display={this.state.waiting} room={this.state.room}/>\n        //   <Status message={this.state.statusMessage}/>\n        //   {/* <div className=\"board\">\n        //     {squareArray}\n        //   </div> */}\n        //   {/* <div style={{ height: 350, width: 550 }}> */}\n        //   {/* </div> */}\n        //   <Grid style={{ width: 500 }} container spacing={1} direction='column'>\n        //     <Grid item xs={12} container spacing={2}>\n        //       {boardArray}\n        //     </Grid>\n        //   </Grid>\n        //   <PlayAgain end={this.state.end} onClick={this.playAgainRequest}/>\n        // </>\n        <div>\n        <Wait display={this.state.waiting} room={this.state.room}/>\n        <Grid container spacing={1} direction='column'>\n          <Paper className=\"paper\">{this.state.statusMessage}</Paper>\n          <Grid item xs={12} container spacing={2}>\n            {boardArray}\n          </Grid>\n          {/* <Button onClick={reset}>Reset</Button> */}\n        </Grid>\n        <PlayAgain end={this.state.end} onClick={this.playAgainRequest}/>\n        </div>\n      )\n    }\n  }\n}\n\n\nexport default SuperBoard\n\n\n\n","import React from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Start from './components/pages/Start';\nimport SuperBoard from './components/pages/SuperBoard'\n\n\nconst Game = () => (\n    <Router>\n        <Route path='/multiplayer-super-tic-tac-toe' exact component={Start} />\n        <Route path='/game' component={SuperBoard} />\n    </Router>\n)\n \nexport default Game","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game'\n\nReactDOM.render(\n  <React.StrictMode>\n      <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo2.92c8c13b.png\";"],"sourceRoot":""}